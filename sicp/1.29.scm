#lang planet neil/sicp
(define (sum term a next b)
  (define (iter a result)
    (if (> a b)
       result
       (iter (next a) (+ (term a) result))))
  (iter a 0)
  )
(define (id x) x)
(define (inc x) (+ 1 x))
(define (cube x) (*(* x x) x))
(define (isum a b)
  (sum id a inc b))
(define (csum  f a b n)
  (define h ( / (- b a) n))
  (define (incdh x) (+ x (* h 2)))
  (define (df x) (* 2 (f x)))
  (define (qf x) (* 4 (f x)))
  (*(+(+ (sum df (+ a (* h 3)) incdh b) 
         (sum qf (+ a (* h 2)) incdh b)
         )
      (+ (f a) (f b)))
     (/ h 3.0)))
  